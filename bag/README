bag-extract is onderdeel van de NLExtract tools voor het inlezen en verrijken van Kadaster BAG GML leveringen
in (voorlopig) een Postgres/Postgis database.

bag-extract biedt de volgende functionaliteiten:
 - Laden van een Kadaster BAG Extract vanuit Kadaster (.zip GML) levering
 - Toepassen van Kadaster BAG mutaties vanuit Kadaster (.zip GML) levering
 - Verrijken BAG met gemeenten en provincies
 - Verrijken: tabel met volledige "ACN-achtige" adressen genereren
 - Stijlen (SLDs) om de ingelezen BAG data te visualiseren via een WMS
 - Validatie van input vlak geometrie
 - Database VIEWs om bagobjecten te selecteren die actueel, bestaand en valide geometrie hebben

Downloaden:
 - download NLExtract
    via git: git clone http://github.com/opengeogroep/NLExtract.git
    als .zip via https://github.com/opengeogroep/NLExtract/zipball/master

Afhankelijkheden:

 - Python (minimaal versie 2.4.3 getest)

 - optioneel: Python package afhankelijkheden installeren bijv
   apt-get of yum install python-setuptools (voor easy_install commando)
   apt-get of yum install python-devel (tbv psycopg2 bibliotheek)
   apt-get of yum install postgresql-devel (tbv psycopg2 bibliotheek)

 - installeer de PostgreSQL python bibliotheek psycopg2:
   sudo easy_install psycopg2

 - indien je niet Python 3.0 of hoger hebt installeer Python package "argparse", bijv
   sudo easy_install argparse

 - NB als je een proxy gebruikt via http_proxy  doe dan easy_install -E (exporteer huidge environment)

Commando:
 - direct via python "python src/bagextract.py"
 - of (Unix,Linux,Mac) via shell script: "bin/bag-extract.sh"
 - Windows: voorlopig alleen via "python src/bagextract.py"

 Alle commando's werken onafhankelijk van de plek (directory) waar ze aangeroepen worden

Instellingen:
 - extract.conf
	Configuratiebestand dat nodig is bij het uitvoeren van de programma's. 
	Dit bestand bevat de volgende instellingen:
	- database naam van de Postgres database
	- schema   [optioneel] schemanaam  waar de tabellen worden aangemaakt (default "public")
	- host     host waar de Postgres database draait
	- user     user voor toegang tot de Postgres database
	- password password van de user voor toegang tot de Postgres database

    Deze  settings kunnen via commandline opties of via -f <mijn conf file> overuled worden, bijv.
    bagextract.py -H localhost -d bag -U postgres -W postgres -c
    bagextract.py -f mijn.conf -c

Voorbeelden:

        0. Help en opties:

            python src/bagextract.py -h
            of
            bin/bag-extract.sh -h

            Alle commando's kunnen via Python of shell .sh script uitgevoerd vanaf elke directory.

        1. Initialiseer de database en vul/verrijk met referentie-data (gemeenten/provincies) (-c):

            python bagextract.py -c
            of
            bag-extract.sh -c

        2. Importeer een extract in de database (-e):

            python bagextract.py -e 9999STA01052011-000002.xml
            python bagextract.py -e 9999STA01052011.zip

            -e werkt op directory, file of .zip inclusief mutatie-bestanden

        3. Verrijken: genereren gemeente + provincie tabellen met geometrie uit woonplaatsen

             python bagextract.py -v -q ../db/script/gemeente-provincie-tabel.sql

			Met de -q (query) optie kan elk SQL bestand worden uitgevoerd

        4. Verrijken: aanmaken volledig adres tabel uit BAG + gemeente + provincie tabellen
           (kan lang duren op gehele BAG, lijkt sneller te gaan via "psql" Postgres commando)

             psql -d bag < ../db/script/adres-tabel.sql

Issues:

        Theoretisch is het mogelijk de hele bag in te lezen vanuit de "hoofd" zip, maar dit kan
        geheugen-problemen opleveren. De voorlopige oplossing is om de hoofdzip uit te pakken in een enkele
        directory en dan de (7) individuele BAG .zip files te extraheren.

        Het (geometrisch) aggregeren van woonplaatsen naar gemeenten en vervolgens naar provincies
        kent een probleem waarbij uit PostGIS de volgende melding komt:
        "NOTICE:  TopologyException: found non-noded intersection between LINESTRING (...) at ...
		ERROR:  GEOS union() threw an error!". Dit is mogelijk een bug in "libgeos" (GEOS) een library gebruikt
		door PostGIS. Dit probleem trad op in GEOS v3.2.2 maar niet in versie 3.3.1.

		Het script db/script/adres-tabel.sql vergt enkele uren. Beste is om deze met standaard PSQL uit te voeren.

		Het resultaat van het genereren van gemeenten en provincies uit woonplaats geometrieen is nog "rommelig":
		veel kleine polygonen. Die willen we nog uitfilteren.

Voorbeeld:
        Zie http://docs.kademo.nl/project/bagextract.html voor een installatie voorbeeld, gevold door extract
        verrijking en WMS visualisatie op http://kademo.nl (kies BAG).
